.. _projets:

Projets
#######

.. contents:: Table des matières
..
    1  Physique
    2  Astrophysique
    3  Divers
      3.1  Formation de pistes de fourmis sur un pont à 2 branches
      3.2  Auto-organisation d'un banc de poisson
      3.3  Évacuation d'une salle & déplacement d'une foule dans une rue
      3.4  Suivi de particule(s)
    4  Mini-projets
      4.1  Statistiques
      4.2  Visualisation
      4.3  Divers
      4.4  Contribution à un projet Open Source


Physique
========

.. include:: physique.txt

Astrophysique
=============

.. include:: astro.txt

Divers
======

Formation de pistes de fourmis sur un pont à 2 branches
-------------------------------------------------------

Si on propose à une colonie de fourmis de choisir entre 2 branches
pour rejoindre une source de nourriture la branche finalement choisie
est toujours la plus courte. Le projet consiste à modéliser et
caractériser ce comportement.

Indication: on peut étudier ce système avec des EDOs. Cela peut aussi
donner lieu à une simulation individu centré et éventuellement une
comparaison entre les deux types de modèle.

.. figure:: Aco_branches.png
   :width: 50%
   :align: center

   **Figure:** 1) la première fourmi trouve la source de nourriture
   (F), via un chemin quelconque (a), puis revient au nid (N) en
   laissant derrière elle une piste de phéromone (b). 2) les fourmis
   empruntent indifféremment les 4 chemins possibles, mais le
   renforcement de la piste rend plus attractif le chemin le plus
   court. 3) les fourmis empruntent le chemin le plus court, les
   portions longues des autres chemins voient la piste de phéromones
   s'évaporer. Source: `Johann Dréo
   <https://commons.wikimedia.org/wiki/File:Aco_branches.svg>`_ via
   Wikimedia Commons.

Auto-organisation d'un banc de poisson
--------------------------------------

.. include:: banc_poisson.txt

Évacuation d'une salle & déplacement d'une foule dans une rue
-------------------------------------------------------------

Le comportement d'une foule est un problème aux applications
multiples: évacuation d'une salle, couloir du métro aux heures de
pointes, manifestations...  On peut en imaginer des modèles simples.
P. ex., on peut décrire chaque individu par sa position, sa vitesse,
et comme étant soumis à des « forces »:

* Une force qui spécifie la direction dans laquelle l'individu *veut*
  se déplacer, :math:`\textbf{f}_{dir} = (\textbf{v}_0 -
  \textbf{v}(t))/\tau`, où :math:`\textbf{v}_0` est la direction et la
  vitesse que la personne veut atteindre, :math:`\textbf{v}` sa
  vitesse actuelle, et :math:`\tau` un temps caractéristique
  d'ajustement.

* Une force qui l'oblige à éviter des obstacles qui peuvent être fixes
  (un mur, un massif de fleurs, ...), ou qui peuvent être les autres
  individus eux-mêmes. On pourra essayer :math:`f_{obs}(d) = a
  \exp(-d/d_0)`, où :math:`d` est la distance entre le piéton et
  l'obstacle, :math:`d_0` la « portée » de la force, et :math:`a` son
  amplitude.

On pourra varier les différents paramètres apparaissant ci-dessus,
tout en leur donnant une interprétation physique réelle, et étudier
leur influence dans des situations concrètes. P. ex., à quelle
vitesse, en fonction de :math:`\textbf{v}_0` et de la densité de
piétons, se déplace une foule contrainte à avancer dans un couloir si
chaque individu veut maintenir une vitesse :math:`\textbf{v}_0` ?
Comment s'organise l'évacuation d'une salle initialement uniformément
peuplée, avec une ou plusieurs sorties, et en la présence éventuels
d'obstacles ?

Il est également possible d'essayer d'autres expressions pour les
forces.

Il existe une littérature conséquente sur le sujet, que l'on pourra
explorer si besoin (p. ex: `Décrypter le mouvement des piétons dans
une foule <http://www2.cnrs.fr/presse/communique/1852.htm>`_).

.. figure::  6k-RoomExit4.png
   :width: 50%
   :align: center

   **Figure:** Un obstacle aide à l'évacuation (DR).

Suivi de particule(s)
---------------------

.. include:: particle_tracking.txt

.. _miniprojets:

Mini-projets
============

Ces mini-projets demande un investissement de développement et d'analyse
moindre, et peuvent être traités (ou au moins initiés) en quelques heures comme
des exercices ouverts.

Statistiques
------------

- Tests statistiques du `NIST/SEMATECH e-Handbook of Statistical
  Methods <http://www.itl.nist.gov/div898/handbook/>`_,
  p.ex. `Comparisons based on data from two processes
  <http://www.itl.nist.gov/div898/handbook/prc/section3/prc3.htm>`_
- Statistiques robustes, p.ex. :ads:`Beers et al. (1990) <1990AJ....100...32B>`


Visualisation
-------------

L'objectif premier de ces projets est de développer des outils de
visualisation sous Python/Matplotlib.

* :wen:`Coordonnées parallèles <Parallel_coordinates>`

  - Sources éventuelles d'inspiration: `Parallel Coordinates plot in
    Matplotlib
    <http://stackoverflow.com/questions/8230638/parallel-coordinates-plot-in-matplotlib>`_,
    `XDAT <http://www.xdat.org/>`_
  - Exemples de jeu de données multi-variables: :wen:`Iris flower data set`,
    :download:`Cars <./carsDataSet.dat>` (`source
    <http://mbostock.github.io/protovis/ex/cars.html>`_)
* `Andrew Curves
  <http://www.jucs.org/jucs_11_11/visualization_of_high_dimensional/jucs_11_11_1806_1819_garc_a_osorio.pdf>`_
  (voir également `Rip’s Applied Mathematics Blog
  <https://rip94550.wordpress.com/2011/10/03/andrews-curves/>`_).  À appliquer
  sur les mêmes jeux de données que pour les coordonnées parallèles.
* `Stacked graphs <http://leebyron.com/else/streamgraph/>`_ (source éventuelle
  d'inspiration: `Python recipe
  <http://code.activestate.com/recipes/576633-stacked-graphs-using-matplotlib/>`_)
* :wen:`Hertzsprung-Russel diagram`: l'objectif est de développer une classe
  permettant de tracer des diagrammes HR à partir de diverses quantités
  observationnelles (magnitudes apparentes ou absolues, couleurs) ou théoriques
  (luminosité, températures effectives), ainsi que des isochrones.

  - Source éventuelle d'inspiration: `Stellar evolutionary tracks
    <https://en.wikipedia.org/wiki/File:Stellar_evolutionary_tracks-en.svg>`_
  - Données photométriques: p.ex. :download:`M55 <./M55_BV.dat>`
    (source: `BVI photometry in M55
    <http://cdsarc.u-strasbg.fr/viz-bin/Cat?J/AJ/134/825>`_)
  - Données théoriques: p.ex. `CMD <http://stev.oapd.inaf.it/cgi-bin/cmd>`_

  .. https://sites.google.com/site/roguewavesoftwarefrance/tutoriels/Python-Clustering-k-Means

* :wen:`Treemap` (source éventuelle d'inspiration: `Treemaps under pylab
  <http://scipy-cookbook.readthedocs.io/items/Matplotlib_TreeMap.html>`_)
* De façon plus générale, l'ensemble des visualisations proposées
  sous:

  - `Flare <http://flare.prefuse.org/demo>`_
  - `D3 <http://mbostock.github.io/d3/ex/>`_
  - `Periodic Table of Vizualisation Methods
    <http://www.visual-literacy.org/periodic_table/periodic_table.html>`_

Divers
------

* :wfr:`Numération_romaine` ★
* Jeu du :wfr:`Taquin` ★★
* Jeu du :wfr:`Mastermind` ★★
* :wen:`Abelian_sandpile_model` ★★★
* :wfr:`Jeu 2048 <2048_(jeu_vidéo)>` (voir également `Make your own 2048 in
  python
  <https://www.hackinscience.org/exercises/make-your-own-2048-in-python>`_) ★★★

Contribution à un projet Open Source
------------------------------------

Vous pouvez également contribuer, à la hauteur de vos capacités (connaissance,
temps) à un projet Open Source, p.ex. identification et correction de bugs,
ajout de nouvelles fonctionnalités, documentation, etc.

Ces projets sont souvent maintenus sur des plateformes de développement
collaboratif telles que `github <https://github.com>`_.  Les bugs sont souvent
classés selon différentes catégories, p.ex. pour `astropy
<https://github.com/astropy/astropy/issues>`__, : `documentation
<https://github.com/astropy/astropy/issues?q=is%3Aissue+is%3Aopen+label%3ADocs>`_,
`good first issue
<https://github.com/astropy/astropy/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22>`_,
`Package novice
<https://github.com/astropy/astropy/issues?q=is%3Aissue+is%3Aopen+label%3APackage-novice>`_,
etc.; le même genre de tags existe pour d'autres projets (p.ex. `numpy
<https://github.com/numpy/numpy/issues>`__, `matplotlib
<https://github.com/matplotlib/matplotlib/issues>`__, `pandas
<https://github.com/pandas-dev/pandas/issues>`__).

Généralement, les plus gros projets ont des exigences de contribution plus
fortes (voir p.ex. `Contributing to Matplotlib
<https://matplotlib.org/devel/contributing.html>`_), mais vous pouvez toujours
contribuer aux discussions.
